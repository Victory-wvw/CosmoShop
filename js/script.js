const CosmoShop = {
    // –î–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–æ–≤
    products: [
        {
            id: 1,
            name: '–ú–∞—Ç–æ–≤–æ–µ –ø–æ–º–∞–¥–∞ "Velvet"',
            brand: 'L\'Oreal',
            price: 1200,
            category: 'decorative',
            image: 'https://via.placeholder.com/300x300/FFE8E8/333?text=–ü–æ–º–∞–¥–∞',
            description: '–ú–∞—Ç–æ–≤–æ–µ –ø–æ–º–∞–¥–∞ —Å –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–º —Ü–≤–µ—Ç–æ–º –∏ –¥–ª–∏—Ç–µ–ª—å–Ω—ã–º —Å—Ä–æ–∫–æ–º –Ω–æ—Å–∫–∏. –ù–µ —Å—É—à–∏—Ç –≥—É–±—ã, –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–µ –Ω–∞–Ω–µ—Å–µ–Ω–∏–µ.'
        },
        {
            id: 2,
            name: '–û–±—ä–µ–º–Ω–∞—è —Ç—É—à—å –¥–ª—è —Ä–µ—Å–Ω–∏—Ü',
            brand: 'Maybelline',
            price: 890,
            category: 'decorative',
            image: 'https://via.placeholder.com/300x300/FFE8E8/333?text=–¢—É—à—å',
            description: '–¢—É—à—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–º–∞ –∏ –¥–ª–∏–Ω—ã —Ä–µ—Å–Ω–∏—Ü. –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —â–µ—Ç–æ—á–∫–∞ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–æ—á–∫–æ–≤.'
        },
        {
            id: 3,
            name: '–£–≤–ª–∞–∂–Ω—è—é—â–∏–π –∫—Ä–µ–º –¥–ª—è –ª–∏—Ü–∞',
            brand: 'Nivea',
            price: 1500,
            category: 'skincare',
            image: 'https://via.placeholder.com/300x300/FFE8E8/333?text=–ö—Ä–µ–º',
            description: '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π —É—Ö–æ–¥ –∑–∞ –∫–æ–∂–µ–π. –ì–ª—É–±–æ–∫–æ —É–≤–ª–∞–∂–Ω—è–µ—Ç –∏ –ø–∏—Ç–∞–µ—Ç –∫–æ–∂—É, –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞—â–∏—Ç–Ω—ã–π –±–∞—Ä—å–µ—Ä.'
        },
        {
            id: 4,
            name: '–ü–∞—Ä—Ñ—é–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–æ–¥–∞ "Chanel ‚Ññ5"',
            brand: 'Chanel',
            price: 4500,
            category: 'perfume',
            image: 'https://via.placeholder.com/300x300/FFE8E8/333?text=–î—É—Ö–∏',
            description: '–£—Ç–æ–Ω—á–µ–Ω–Ω—ã–π –∞—Ä–æ–º–∞—Ç —Å –Ω–æ—Ç–∫–∞–º–∏ –∂–∞—Å–º–∏–Ω–∞, —Ä–æ–∑—ã –∏ –≤–∞–Ω–∏–ª–∏. –°—Ç–æ–π–∫–æ—Å—Ç—å –¥–æ 8 —á–∞—Å–æ–≤.'
        },
        {
            id: 5,
            name: '–®–∞–º–ø—É–Ω—å –¥–ª—è –æ–±—ä–µ–º–∞ –≤–æ–ª–æ—Å',
            brand: 'L\'Oreal',
            price: 750,
            category: 'haircare',
            image: 'https://via.placeholder.com/300x300/FFE8E8/333?text=–®–∞–º–ø—É–Ω—å',
            description: '–®–∞–º–ø—É–Ω—å –¥–ª—è –ø—Ä–∏–¥–∞–Ω–∏—è –æ–±—ä–µ–º–∞ —Ç–æ–Ω–∫–∏–º –≤–æ–ª–æ—Å–∞–º. –û–±–æ–≥–∞—â–µ–Ω –ø—Ä–æ—Ç–µ–∏–Ω–∞–º–∏ –∏ –≤–∏—Ç–∞–º–∏–Ω–∞–º–∏.'
        },
        {
            id: 6,
            name: '–¢–æ–Ω–∞–ª—å–Ω—ã–π –∫—Ä–µ–º',
            brand: 'Maybelline',
            price: 1300,
            category: 'decorative',
            image: 'https://via.placeholder.com/300x300/FFE8E8/333?text=–¢–æ–Ω–∞–ª—å–Ω—ã–π',
            description: '–õ–µ–≥–∫–∏–π —Ç–æ–Ω–∞–ª—å–Ω—ã–π –∫—Ä–µ–º —Å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –ø–æ–∫—Ä—ã—Ç–∏–µ–º. –ù–µ –∑–∞–±–∏–≤–∞–µ—Ç –ø–æ—Ä—ã, –ø–æ–¥—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –ø–æ–¥ —Ç–æ–Ω –∫–æ–∂–∏.'
        },
        {
            id: 7,
            name: '–ü–∞–ª–µ—Ç–∫–∞ —Ç–µ–Ω–µ–π –¥–ª—è –≤–µ–∫',
            brand: 'NYX',
            price: 1800,
            category: 'decorative',
            image: 'https://via.placeholder.com/300x300/FFE8E8/333?text=–¢–µ–Ω–∏',
            description: '–ü–∞–ª–µ—Ç–∫–∞ –∏–∑ 12 —Å—Ç–æ–π–∫–∏—Ö –æ—Ç—Ç–µ–Ω–∫–æ–≤. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–Ω–µ–≤–Ω–æ–≥–æ –∏ –≤–µ—á–µ—Ä–Ω–µ–≥–æ –º–∞–∫–∏—è–∂–∞.'
        },
        {
            id: 8,
            name: '–ì–µ–ª—å –¥–ª—è —É–º—ã–≤–∞–Ω–∏—è',
            brand: 'La Roche-Posay',
            price: 950,
            category: 'skincare',
            image: 'https://via.placeholder.com/300x300/FFE8E8/333?text=–ì–µ–ª—å',
            description: '–ú—è–≥–∫–∏–π –≥–µ–ª—å –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ —É–º—ã–≤–∞–Ω–∏—è. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–π –∫–æ–∂–∏.'
        }
    ],

    // –ö–æ—Ä–∑–∏–Ω–∞
    cart: [],
    
    // –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    currentUser: null,
    
    // –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞
    currentQuantity: 1,

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    init: function() {
        console.log('üöÄ CosmoShop initialized');
        
        this.loadCart();
        this.loadUser();
        this.setupEventListeners();
        this.updateCartCounter();
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
        this.detectPageAndLoadContent();
    },

    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    detectPageAndLoadContent: function() {
        const path = window.location.pathname.toLowerCase();
        const urlParams = new URLSearchParams(window.location.search);
        const productId = urlParams.get('id');

        console.log('Current page:', path);
        console.log('Product ID from URL:', productId);

        if (path.includes('product-card') && productId) {
            this.loadProductData(parseInt(productId));
        } else if (path.includes('catalog')) {
            this.renderCatalog();
        } else if (path.includes('cart')) {
            this.renderCart();
        } else if (path.includes('login')) {
            this.setupAuthForms();
        } else {
            // –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–ª–∏ index.html
            this.renderHomePage();
        }
    },

    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ä–∑–∏–Ω—ã –∏–∑ LocalStorage
    loadCart: function() {
        const savedCart = localStorage.getItem('cosmoshop_cart');
        if (savedCart) {
            this.cart = JSON.parse(savedCart);
            console.log('Cart loaded:', this.cart.length, 'items');
        }
    },

    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    loadUser: function() {
        const savedUser = localStorage.getItem('cosmoshop_user');
        if (savedUser) {
            this.currentUser = JSON.parse(savedUser);
            console.log('User loaded:', this.currentUser);
        }
    },

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –≤ LocalStorage
    saveCart: function() {
        localStorage.setItem('cosmoshop_cart', JSON.stringify(this.cart));
    },

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    saveUser: function() {
        if (this.currentUser) {
            localStorage.setItem('cosmoshop_user', JSON.stringify(this.currentUser));
        }
    },

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    setupEventListeners: function() {
        // –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ
        const searchInput = document.getElementById('searchInput');
        if (searchInput) {
            searchInput.addEventListener('input', (e) => {
                this.searchProducts(e.target.value);
            });
        }

        // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤
        const filterInputs = document.querySelectorAll('.filters input');
        filterInputs.forEach(input => {
            input.addEventListener('change', () => {
                this.applyFilters();
            });
        });

        console.log('Event listeners setup completed');
    },

    // –†–µ–Ω–¥–µ—Ä –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    renderHomePage: function() {
        console.log('Rendering home page');
        this.renderFeaturedProducts();
    },

    // –†–µ–Ω–¥–µ—Ä —Ö–∏—Ç–æ–≤ –ø—Ä–æ–¥–∞–∂ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π
    renderFeaturedProducts: function() {
        const featuredGrid = document.getElementById('featuredProducts');
        if (!featuredGrid) {
            console.log('Featured products grid not found on this page');
            return;
        }

        // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 6 —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π
        const featuredProducts = this.products.slice(0, 6);
        
        featuredGrid.innerHTML = featuredProducts.map(product => `
            <div class="product-item" onclick="CosmoShop.openProduct(${product.id})">
                <div class="product-image">
                    <img src="${product.image}" alt="${product.name}" 
                         onerror="this.src='https://via.placeholder.com/300x300/FFE8E8/333?text=–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'">
                </div>
                <div class="product-info">
                    <h4>${product.name}</h4>
                    <p class="brand">${product.brand}</p>
                    <p class="price">${product.price} —Ä—É–±.</p>
                    <button class="btn-add" onclick="event.stopPropagation(); CosmoShop.addToCart(${product.id})">
                        –í –∫–æ—Ä–∑–∏–Ω—É
                    </button>
                </div>
            </div>
        `).join('');

        console.log('Featured products rendered:', featuredProducts.length);
    },

    // –†–µ–Ω–¥–µ—Ä –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤
    renderCatalog: function() {
        console.log('Rendering catalog');
        this.renderProducts();
    },

    // –†–µ–Ω–¥–µ—Ä –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ
    renderProducts: function(productsToRender = this.products) {
        const productsGrid = document.getElementById('productsGrid');
        if (!productsGrid) {
            console.log('Products grid not found on this page');
            return;
        }

        productsGrid.innerHTML = productsToRender.map(product => `
            <div class="product-item" onclick="CosmoShop.openProduct(${product.id})">
                <div class="product-image">
                    <img src="${product.image}" alt="${product.name}" 
                         onerror="this.src='https://via.placeholder.com/300x300/FFE8E8/333?text=–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'">
                </div>
                <div class="product-info">
                    <h4>${product.name}</h4>
                    <p class="brand">${product.brand}</p>
                    <p class="price">${product.price} —Ä—É–±.</p>
                    <button class="btn-add" onclick="event.stopPropagation(); CosmoShop.addToCart(${product.id})">
                        –í –∫–æ—Ä–∑–∏–Ω—É
                    </button>
                </div>
            </div>
        `).join('');

        console.log('Products rendered:', productsToRender.length);
    },

    // –û—Ç–∫—Ä—ã—Ç–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–∞
    openProduct: function(productId) {
        window.location.href = `product-card.html?id=${productId}`;
    },

    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–∞
    loadProductData: function(productId) {
        console.log('Loading product data for ID:', productId);
        
        const product = this.products.find(p => p.id === productId);
        const productDetail = document.getElementById('productDetail');
        
        if (!productDetail) {
            console.error('Product detail container not found');
            return;
        }

        if (product) {
            productDetail.innerHTML = `
                <div class="product-gallery">
                    <div class="main-image">
                        <img src="${product.image}" alt="${product.name}" 
                             onerror="this.src='https://via.placeholder.com/500x500/FFE8E8/333?text=–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'">
                    </div>
                </div>

                <div class="product-info-detail">
                    <h2>${product.name}</h2>
                    <p class="product-brand">${product.brand}</p>
                    <p class="price">${product.price} —Ä—É–±.</p>
                    
                    <div class="product-options">
                        <div class="option">
                            <label>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</label>
                            <div class="quantity">
                                <button type="button" class="qty-btn" onclick="CosmoShop.changeQuantity(-1)">-</button>
                                <span class="qty-value">${this.currentQuantity}</span>
                                <button type="button" class="qty-btn" onclick="CosmoShop.changeQuantity(1)">+</button>
                            </div>
                        </div>
                    </div>

                    <div class="product-actions">
                        <button class="btn-add-to-cart" onclick="CosmoShop.addToCart(${product.id})">
                            –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
                        </button>
                    </div>

                    <div class="product-description">
                        <h3>–û–ø–∏—Å–∞–Ω–∏–µ</h3>
                        <p>${product.description}</p>
                    </div>
                </div>
            `;
            console.log('Product data rendered for:', product.name);
        } else {
            productDetail.innerHTML = `
                <div class="loading" style="grid-column: 1 / -1;">
                    <h3>–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω</h3>
                    <p>–ó–∞–ø—Ä–æ—à–µ–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.</p>
                    <a href="catalog.html" class="btn">–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥</a>
                </div>
            `;
        }
    },

    // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ç–æ–≤–∞—Ä–∞
    changeQuantity: function(change) {
        this.currentQuantity += change;
        if (this.currentQuantity < 1) this.currentQuantity = 1;
        
        const qtyElement = document.querySelector('.qty-value');
        if (qtyElement) {
            qtyElement.textContent = this.currentQuantity;
        }
    },

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
    addToCart: function(productId, quantity = this.currentQuantity) {
        const product = this.products.find(p => p.id === productId);
        
        if (!product) {
            this.showNotification('–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!');
            return;
        }

        const existingItem = this.cart.find(item => item.id === productId);
        
        if (existingItem) {
            existingItem.quantity += quantity;
        } else {
            this.cart.push({
                ...product,
                quantity: quantity
            });
        }
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        this.currentQuantity = 1;
        const qtyElement = document.querySelector('.qty-value');
        if (qtyElement) {
            qtyElement.textContent = '1';
        }
        
        this.saveCart();
        this.updateCartCounter();
        this.showNotification(`"${product.name}" –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!`);
        
        // –ï—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∫–æ—Ä–∑–∏–Ω—ã - –æ–±–Ω–æ–≤–ª—è–µ–º –µ–µ
        if (window.location.pathname.includes('cart')) {
            this.renderCart();
        }
    },

    // –†–µ–Ω–¥–µ—Ä –∫–æ—Ä–∑–∏–Ω—ã
    renderCart: function() {
        const cartItems = document.getElementById('cartItems');
        const cartSummary = document.getElementById('cartSummary');
        const emptyCart = document.getElementById('emptyCart');
        
        if (!cartItems) {
            console.log('Cart items container not found');
            return;
        }

        if (this.cart.length === 0) {
            if (emptyCart) emptyCart.style.display = 'block';
            if (cartSummary) cartSummary.style.display = 'none';
            cartItems.innerHTML = `
                <div class="empty-cart">
                    <p>–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>
                    <a href="catalog.html" class="btn">–ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–∫—É–ø–∫–∞–º</a>
                </div>
            `;
            return;
        }

        if (emptyCart) emptyCart.style.display = 'none';
        if (cartSummary) cartSummary.style.display = 'block';

        // –†–µ–Ω–¥–µ—Ä —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
        cartItems.innerHTML = this.cart.map(item => `
            <div class="cart-item">
                <div class="item-image">
                    <img src="${item.image}" alt="${item.name}" 
                         onerror="this.src='https://via.placeholder.com/100x100/FFE8E8/333?text=–¢–æ–≤–∞—Ä'">
                </div>
                <div class="item-info">
                    <h4>${item.name}</h4>
                    <p>${item.brand}</p>
                </div>
                <div class="item-price">${item.price} —Ä—É–±.</div>
                <div class="item-quantity">
                    <button class="qty-btn" onclick="CosmoShop.updateCartQuantity(${item.id}, -1)">-</button>
                    <span class="qty-value">${item.quantity}</span>
                    <button class="qty-btn" onclick="CosmoShop.updateCartQuantity(${item.id}, 1)">+</button>
                </div>
                <div class="item-total">${item.price * item.quantity} —Ä—É–±.</div>
                <button class="btn-remove" onclick="CosmoShop.removeFromCart(${item.id})">√ó</button>
            </div>
        `).join('');

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–π —Å—É–º–º—ã
        this.updateCartTotal();
    },

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
    updateCartQuantity: function(productId, change) {
        const item = this.cart.find(item => item.id === productId);
        if (item) {
            item.quantity += change;
            if (item.quantity <= 0) {
                this.removeFromCart(productId);
            } else {
                this.saveCart();
                this.renderCart();
                this.updateCartCounter();
            }
        }
    },

    // –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
    removeFromCart: function(productId) {
        const itemIndex = this.cart.findIndex(item => item.id === productId);
        if (itemIndex !== -1) {
            const itemName = this.cart[itemIndex].name;
            this.cart.splice(itemIndex, 1);
            this.saveCart();
            this.renderCart();
            this.updateCartCounter();
            this.showNotification(`"${itemName}" —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã`);
        }
    },

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–π —Å—É–º–º—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ
    updateCartTotal: function() {
        const itemsTotal = this.cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
        const deliveryCost = itemsTotal > 2000 ? 0 : 300;
        const totalAmount = itemsTotal + deliveryCost;

        if (document.getElementById('itemsTotal')) {
            document.getElementById('itemsTotal').textContent = `${itemsTotal} —Ä—É–±.`;
            document.getElementById('deliveryCost').textContent = deliveryCost === 0 ? '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ' : `${deliveryCost} —Ä—É–±.`;
            document.getElementById('totalAmount').textContent = `${totalAmount} —Ä—É–±.`;
        }
    },

    // –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤
    searchProducts: function(query) {
        if (!query.trim()) {
            this.renderProducts();
            return;
        }

        const filteredProducts = this.products.filter(product =>
            product.name.toLowerCase().includes(query.toLowerCase()) ||
            product.brand.toLowerCase().includes(query.toLowerCase()) ||
            product.description.toLowerCase().includes(query.toLowerCase())
        );
        
        this.renderProducts(filteredProducts);
    },

    // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    applyFilters: function() {
        const categoryFilters = Array.from(document.querySelectorAll('.filter-group input[type="checkbox"]:checked'))
            .map(input => input.value);
        
        const minPrice = parseInt(document.getElementById('minPrice')?.value) || 0;
        const maxPrice = parseInt(document.getElementById('maxPrice')?.value) || 10000;

        const filteredProducts = this.products.filter(product => {
            const categoryMatch = categoryFilters.length === 0 || categoryFilters.some(filter => 
                product.category.includes(filter) || product.brand.includes(filter));
            const priceMatch = product.price >= minPrice && product.price <= maxPrice;
            
            return categoryMatch && priceMatch;
        });

        this.renderProducts(filteredProducts);
    },

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–æ—Ä–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    setupAuthForms: function() {
        const showRegisterLink = document.getElementById('showRegister');
        const showLoginLink = document.getElementById('showLogin');
        
        if (showRegisterLink) {
            showRegisterLink.addEventListener('click', (e) => {
                e.preventDefault();
                this.showRegisterForm();
            });
        }
        
        if (showLoginLink) {
            showLoginLink.addEventListener('click', (e) => {
                e.preventDefault();
                this.showLoginForm();
            });
        }
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    showRegisterForm: function() {
        document.getElementById('loginForm').style.display = 'none';
        document.getElementById('registerForm').style.display = 'block';
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞
    showLoginForm: function() {
        document.getElementById('registerForm').style.display = 'none';
        document.getElementById('loginForm').style.display = 'block';
    },

    // –í—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    login: function(event) {
        if (event) event.preventDefault();
        
        const email = document.getElementById('email')?.value;
        const password = document.getElementById('password')?.value;
        
        if (!email || !password) {
            this.showNotification('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
            return;
        }
        
        this.currentUser = { 
            email: email, 
            name: email.split('@')[0],
            loginTime: new Date().toISOString()
        };
        
        this.saveUser();
        this.showNotification('–í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏!');
        
        setTimeout(() => {
            window.location.href = 'index.html';
        }, 1000);
    },

    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    register: function(event) {
        if (event) event.preventDefault();
        
        const name = document.getElementById('reg-name')?.value;
        const email = document.getElementById('reg-email')?.value;
        const password = document.getElementById('reg-password')?.value;
        const confirm = document.getElementById('reg-confirm')?.value;
        
        if (!name || !email || !password || !confirm) {
            this.showNotification('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
            return;
        }
        
        if (password !== confirm) {
            this.showNotification('–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç');
            return;
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const users = JSON.parse(localStorage.getItem('cosmoshop_users') || '[]');
        users.push({ name, email, password, registered: new Date().toISOString() });
        localStorage.setItem('cosmoshop_users', JSON.stringify(users));
        
        this.showNotification('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!');
        this.showLoginForm();
    },

    // –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
    checkout: function() {
        if (this.cart.length === 0) {
            this.showNotification('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!');
            return;
        }
        
        if (!this.currentUser) {
            this.showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞');
            setTimeout(() => {
                window.location.href = 'login.html';
            }, 1500);
            return;
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑ –≤ –∏—Å—Ç–æ—Ä–∏—é
        const order = {
            id: Date.now(),
            items: [...this.cart],
            total: this.cart.reduce((sum, item) => sum + (item.price * item.quantity), 0),
            user: this.currentUser,
            date: new Date().toISOString(),
            status: 'confirmed'
        };
        
        const orders = JSON.parse(localStorage.getItem('cosmoshop_orders') || '[]');
        orders.push(order);
        localStorage.setItem('cosmoshop_orders', JSON.stringify(orders));
        
        this.showNotification('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!');
        
        // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
        this.cart = [];
        this.saveCart();
        this.renderCart();
        this.updateCartCounter();
    },

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
    updateCartCounter: function() {
        const counters = document.querySelectorAll('.cart-counter');
        const totalItems = this.cart.reduce((sum, item) => sum + item.quantity, 0);
        
        counters.forEach(counter => {
            counter.textContent = totalItems;
        });
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showNotification: function(message, type = 'success') {
        // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        const existingNotifications = document.querySelectorAll('.notification');
        existingNotifications.forEach(notification => notification.remove());
        
        const notification = document.createElement('div');
        notification.className = `notification ${type}`;
        notification.innerHTML = `
            <span>${message}</span>
            <button onclick="this.parentElement.remove()" style="margin-left: 10px; background: none; border: none; color: white; cursor: pointer;">√ó</button>
        `;
        
        // –°—Ç–∏–ª–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: ${type === 'error' ? '#ff4444' : '#D4AF37'};
            color: white;
            padding: 1rem 1.5rem;
            border-radius: 5px;
            z-index: 10000;
            animation: slideInRight 0.3s ease;
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
            display: flex;
            align-items: center;
            justify-content: space-between;
            min-width: 300px;
            font-weight: 500;
        `;
        
        document.body.appendChild(notification);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            if (notification.parentElement) {
                notification.remove();
            }
        }, 4000);
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', function() {
    CosmoShop.init();
});

// –î–æ–±–∞–≤–ª—è–µ–º CSS –∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
const style = document.createElement('style');
style.textContent = `
    @keyframes slideInRight {
        from {
            transform: translateX(100%);
            opacity: 0;
        }
        to {
            transform: translateX(0);
            opacity: 1;
        }
    }
`;
document.head.appendChild(style);
